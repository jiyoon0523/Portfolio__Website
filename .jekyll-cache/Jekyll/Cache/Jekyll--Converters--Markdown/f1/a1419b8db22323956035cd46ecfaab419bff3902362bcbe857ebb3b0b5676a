I"ld<h2 id="-project-overview">🌊 Project Overview</h2>

<p><strong><font size="4"> 눈 떠 보니 깊은 바닷속? 미션을 수행하고 바다 세계를 구하자!</font></strong></p>

<p><strong><font size="4">소개/ </font></strong> 어드벤처 인디 게임 ABZÛ를 타겟으로 삼아 동일한 기능 구현<br />
<strong><font size="4">기간/ </font></strong> 2020.08.10~2020.09.15 (5주)<br />
<strong><font size="4">환경/ </font></strong> Unity 2019.4.8f1 3D, Visual Studio 2017<br />
<strong><font size="4">역할/ </font></strong> 카메라 뷰&amp; 플레이어 조작, 튜토리얼, 미션</p>

<hr />

<h2 id="-contents">🌊 Contents</h2>

<p><a href="#1-카메라-뷰-조작"><font size="4" color="black">1. 카메라 뷰 조작</font></a></p>

<ul>
  <li>마우스를 이용한 시점 조절</li>
</ul>

<p><strong><a href="#2-플레이어-조작"><font size="4" color="black">2. 플레이어 조작</font></a></strong></p>
<ul>
  <li>키보드와 마우스를 이용한 플레이어 이동 및 회전</li>
</ul>

<p><strong><a href="#3-튜토리얼"><font size="4" color="black">3. 튜토리얼</font></a></strong></p>
<ul>
  <li>조작법 안내 UI</li>
  <li>bool값을 이용한 수행 여부 판단</li>
</ul>

<h4 id="4-미션">4. 미션</h4>
<ul>
  <li>웅덩이에 갇힌 물고기 풀어주기</li>
  <li>물고기와 함께 ballet</li>
  <li>상어 석상에 앉아 명상하기</li>
  <li>달성률 UI 업데이트</li>
</ul>

<hr />
<h3 id="1-카메라-뷰-조작">1. 카메라 뷰 조작</h3>

<p>카메라는 기본적으로 플레이어의 뒤에서 플레이어를 따라가지만, 마우스를 상하좌우로 이동해 플레이어의 위, 아래, 양 옆에서 플레이어를 바라보게 할 수 있다. 이러한 시점 조절은 바닷속 풍경을 360°로 감상할 수 있도록 만들어 보다 풍부한 플레이 경험을 제공한다.</p>

<p><img src="/images/Diveway_Campos_gif.gif" alt="" /></p>

<p>이와 같은 카메라 뷰를 구현하기 위해 다음 두 가지 방법을 사용하였다.</p>

<h6 id="1-항상-플레이어-뒤에-위치하는-campos1과-플레이어-주변을-도는-campos2를-만든다">1. 항상 플레이어 뒤에 위치하는 CamPos1과 플레이어 주변을 도는 CamPos2를 만든다.</h6>

<p><img src="/images/Diveway_Campos1and2.jpg" alt="" /></p>

<ul>
  <li>CamPos2가 마우스 입력에 따라 플레이어 주변을 돌게 하는 코드</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#">  <span class="k">void</span> <span class="nf">RotateByMouse</span><span class="p">()</span>
    <span class="p">{</span>
       <span class="c1">// 마우스 입력을 누적하고</span>
        <span class="kt">float</span> <span class="n">mouseX</span> <span class="p">=</span> <span class="n">Input</span><span class="p">.</span><span class="nf">GetAxis</span><span class="p">(</span><span class="s">"Mouse X"</span><span class="p">);</span>
        <span class="kt">float</span> <span class="n">mouseY</span> <span class="p">=</span> <span class="n">Input</span><span class="p">.</span><span class="nf">GetAxis</span><span class="p">(</span><span class="s">"Mouse Y"</span><span class="p">);</span>

        <span class="n">mx</span> <span class="p">+=</span> <span class="n">mouseX</span> <span class="p">*</span> <span class="n">rotSpeed</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
        <span class="n">my</span> <span class="p">+=</span> <span class="n">mouseY</span> <span class="p">*</span> <span class="n">rotSpeed</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
        <span class="n">my</span> <span class="p">=</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Clamp</span><span class="p">(</span><span class="n">my</span><span class="p">,</span> <span class="p">-</span><span class="m">90.0f</span><span class="p">,</span> <span class="m">90.0f</span><span class="p">);</span>

       <span class="c1">// 알맞은 삼각함수를 적용해 플레이어 주변을 돌게 함</span>
        <span class="kt">float</span> <span class="n">x</span> <span class="p">=</span> <span class="n">dist</span> <span class="p">*</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Cos</span><span class="p">(</span><span class="n">mx</span><span class="p">);</span>
        <span class="kt">float</span> <span class="n">z</span> <span class="p">=</span> <span class="n">dist</span> <span class="p">*</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Sin</span><span class="p">(</span><span class="n">mx</span><span class="p">);</span>
        <span class="kt">float</span> <span class="n">y</span> <span class="p">=</span> <span class="n">dist</span> <span class="p">*</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Tan</span><span class="p">(</span><span class="n">my</span><span class="p">);</span>

        <span class="n">tr</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector3</span><span class="p">(</span><span class="n">target</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">x</span> <span class="p">+</span> <span class="n">x</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">y</span> <span class="p">+</span> <span class="n">y</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">.</span><span class="n">z</span> <span class="p">+</span> <span class="n">z</span><span class="p">);</span>
        <span class="c1">// 항상 플레이어를 보도록 함</span>
        <span class="n">tr</span><span class="p">.</span><span class="nf">LookAt</span><span class="p">(</span><span class="n">target</span><span class="p">.</span><span class="n">transform</span><span class="p">);</span>
    <span class="p">}</span></code></pre></figure>

<h6 id="2-fsm을-이용해-카메라의-state를-intro-tutorial-play_behind-play_around로-구분하고-각-상태별로-다른-메서드에-따라-움직이도록-한다">2. FSM을 이용해 카메라의 State를 Intro, Tutorial, Play_Behind, Play_Around로 구분하고, 각 상태별로 다른 메서드에 따라 움직이도록 한다.</h6>

<hr />

<ul>
  <li>카메라의 State 구분</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"> <span class="k">enum</span> <span class="n">CameraState</span>
    <span class="p">{</span>
        <span class="n">Intro</span><span class="p">,</span>
        <span class="n">Tutorial</span><span class="p">,</span>
        <span class="n">Play_Behind</span><span class="p">,</span>
        <span class="n">Play_Around</span>
    <span class="p">}</span>
    <span class="k">void</span> <span class="nf">Update</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">switch</span> <span class="p">(</span><span class="n">state</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Intro</span><span class="p">:</span>
                <span class="nf">Intro</span><span class="p">();</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Tutorial</span><span class="p">:</span>
                <span class="nf">Tutorial</span><span class="p">();</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Play_Behind</span><span class="p">:</span>
                <span class="nf">Play_Behind</span><span class="p">();</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Play_Around</span><span class="p">:</span>
                <span class="nf">Play_Around</span><span class="p">();</span>
                <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
 </code></pre></figure>

<ul>
  <li>Play_Behind와 Play_Around 사이를 오가는 코드</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#"><span class="k">private</span> <span class="k">void</span> <span class="nf">Play_Behind</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="n">target1</span><span class="p">.</span><span class="n">position</span><span class="p">;</span>
        <span class="n">transform</span><span class="p">.</span><span class="n">forward</span> <span class="p">=</span> <span class="n">target1</span><span class="p">.</span><span class="n">forward</span><span class="p">;</span>

        <span class="kt">float</span> <span class="n">mouseX</span> <span class="p">=</span> <span class="n">Input</span><span class="p">.</span><span class="nf">GetAxis</span><span class="p">(</span><span class="s">"Mouse X"</span><span class="p">);</span>
        <span class="kt">float</span> <span class="n">mouseY</span> <span class="p">=</span> <span class="n">Input</span><span class="p">.</span><span class="nf">GetAxis</span><span class="p">(</span><span class="s">"Mouse Y"</span><span class="p">);</span>

        <span class="c1">// 마우스의 상하좌우 이동이 있으면 Play_Around로 전환</span>
        <span class="k">if</span><span class="err">\</span><span class="p">(</span><span class="n">mouseX</span><span class="p">!=</span> <span class="m">0</span> <span class="err">\</span><span class="p">||</span> <span class="n">mouseY</span><span class="p">!=</span><span class="m">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="n">target2</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="m">2</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
            <span class="n">transform</span><span class="p">.</span><span class="n">forward</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="n">target2</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="m">2</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
            <span class="n">state</span> <span class="p">=</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Play_Around</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">private</span> <span class="k">void</span> <span class="nf">Play_Around</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="n">target2</span><span class="p">.</span><span class="n">position</span><span class="p">;</span>
        <span class="n">transform</span><span class="p">.</span><span class="n">forward</span> <span class="p">=</span> <span class="n">target2</span><span class="p">.</span><span class="n">forward</span><span class="p">;</span>

        <span class="c1">// 마우스를 클릭해 일반 또는 부스트 헤엄이 시작되면 Play_Behind로 전환</span>
        <span class="k">if</span> <span class="err">\</span><span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="n">GetMouseButtonDown</span><span class="err">\</span><span class="p">(</span><span class="m">0</span><span class="p">)</span> <span class="err">\</span><span class="p">||</span> <span class="n">Input</span><span class="p">.</span><span class="n">GetMouseButtonDown</span><span class="err">\</span><span class="p">(</span><span class="m">1</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="n">target1</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="m">2</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
            <span class="n">transform</span><span class="p">.</span><span class="n">forward</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="n">target1</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="m">2</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
            <span class="n">state</span> <span class="p">=</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Play_Behind</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span></code></pre></figure>

<h3 id="2-플레이어-조작">2. 플레이어 조작</h3>

<p>방향키로 진행 방향을 조절하고, WASD 키로 회전 등의 행동을 실행한다.<br />
Character Controller를 이용해 앞으로 헤엄치게 하고, 마우스 클릭으로 헤엄 속력을 조절한다.
대표로 하나만</p>

<ul>
  <li>플레이어 조작 코드</li>
</ul>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic3RhdGVEaWFncmFtLXYyXG5bKl0gLS0-IEFjdGl2ZVxuc3RhdGUgQWN0aXZlIHtcblsqXSAtLT4gTWFpblJvb21cbk1haW5Sb29tIC0tPiBbKl0gOiBxdWl0XG5NYWluUm9vbSAtLT4gRXhlcmNpc2UgOiBzZWxlY3RNdXNpY1xuRXhlcmNpc2UgLS0-IFJlc3VsdCA6IHRpbWVFbmRcblJlc3VsdCAtLT4gTWFpblJvb20gOiBhZGRSYW5rXG59XG5BY3RpdmUgLS0-IFsqXSIsIm1lcm1haWQiOm51bGx9" /></p>

<ul>
  <li>물 속에서 부유하는 느낌을 내기 위해 시간 흐름에 따라 y값에 변화를 주는 코드</li>
</ul>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#">  <span class="k">private</span> <span class="k">void</span> <span class="nf">FloatPlayer</span><span class="p">()</span>
      <span class="p">{</span>
          <span class="kt">float</span> <span class="n">y</span> <span class="p">=</span> <span class="n">amp</span> <span class="p">*</span> <span class="n">Mathf</span><span class="p">.</span><span class="nf">Sin</span><span class="p">(</span><span class="n">currentTime</span> <span class="p">*</span> <span class="n">floatSpeed</span><span class="p">);</span> <span class="c1">//위아래 </span>
          <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">+=</span> <span class="n">Vector3</span><span class="p">.</span><span class="n">up</span> <span class="p">*</span> <span class="n">y</span><span class="p">;</span>
      <span class="p">}</span></code></pre></figure>

<hr />

<h3 id="3-튜토리얼">3. 튜토리얼</h3>

<p>튜토리얼에서는 헤엄, 부스트 헤엄, 방향 변경의 세 기능을 순서대로 사용해 보도록 한다. UI의 안내를 따라야 기능을 사용해야만 다음 튜토리얼로 진행할 수 있도록 하기 위해 Swim, Boost, Turn 각 튜토리얼 단계의 실행 여부를 <strong>bool</strong> 값으로 판별하였다.</p>

<p><img src="/images/Diveway_Tutorial_gif.gif" alt="" /></p>

<figure class="highlight"><pre><code class="language-c#" data-lang="c#">  <span class="k">private</span> <span class="k">void</span> <span class="nf">Tutorial</span><span class="p">()</span>
      <span class="p">{</span>
          <span class="n">transform</span><span class="p">.</span><span class="n">position</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="n">target1</span><span class="p">.</span><span class="n">position</span><span class="p">,</span> <span class="m">5</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
          <span class="n">transform</span><span class="p">.</span><span class="n">forward</span> <span class="p">=</span> <span class="n">Vector3</span><span class="p">.</span><span class="nf">Lerp</span><span class="p">(</span><span class="n">transform</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="n">target1</span><span class="p">.</span><span class="n">forward</span><span class="p">,</span> <span class="m">5</span> <span class="p">*</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">);</span>
          <span class="n">currentTime</span> <span class="p">+=</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
          <span class="k">if</span> <span class="p">(</span><span class="n">isSwimUIState</span> <span class="p">==</span> <span class="k">true</span><span class="p">)</span>
          <span class="p">{</span>
              <span class="k">if</span> <span class="p">(</span><span class="n">swimUI</span><span class="p">.</span><span class="n">activeSelf</span> <span class="p">==</span> <span class="k">false</span> <span class="p">&amp;&amp;</span> <span class="n">currentTime</span><span class="p">&gt;</span><span class="m">1.5f</span><span class="p">)</span>
                  <span class="n">swimUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
              <span class="k">else</span>
              <span class="p">{</span>
                  <span class="k">if</span> <span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="nf">GetMouseButton</span><span class="p">(</span><span class="m">1</span><span class="p">))</span>
                  <span class="p">{</span>
                      <span class="n">swimUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                      <span class="n">isSwimUIState</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                      <span class="n">isBoostUIState</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                      <span class="n">currentTime</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                  <span class="p">}</span>
              <span class="p">}</span>
          <span class="p">}</span>
          <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isBoostUIState</span> <span class="p">==</span> <span class="k">true</span><span class="p">)</span>
          <span class="p">{</span>
              <span class="k">if</span> <span class="p">(</span><span class="n">boostUI</span><span class="p">.</span><span class="n">activeSelf</span> <span class="p">==</span> <span class="k">false</span><span class="p">)</span>
              <span class="p">{</span>
                  <span class="n">currentTime</span> <span class="p">+=</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
                  <span class="k">if</span> <span class="p">(</span><span class="n">currentTime</span> <span class="p">&gt;</span> <span class="m">3</span><span class="p">)</span>
                      <span class="n">boostUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
              <span class="p">}</span>
              <span class="k">else</span>
              <span class="p">{</span>
                  <span class="k">if</span> <span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="nf">GetMouseButton</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
                  <span class="p">{</span>
                      <span class="n">boostUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                      <span class="n">isBoostUIState</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                      <span class="n">isTurnUIState</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                      <span class="n">currentTime</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                  <span class="p">}</span>
              <span class="p">}</span>

          <span class="p">}</span>
          <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isTurnUIState</span> <span class="p">==</span> <span class="k">true</span><span class="p">)</span>
          <span class="p">{</span>
              <span class="k">if</span> <span class="p">(</span><span class="n">turnUI</span><span class="p">.</span><span class="n">activeSelf</span> <span class="p">==</span> <span class="k">false</span><span class="p">)</span>
              <span class="p">{</span>
                  <span class="n">currentTime</span> <span class="p">+=</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
                  <span class="k">if</span> <span class="p">(</span><span class="n">currentTime</span> <span class="p">&gt;</span> <span class="m">1</span><span class="p">)</span>
                      <span class="n">turnUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
              <span class="p">}</span>
              <span class="k">else</span>
              <span class="p">{</span>
                  <span class="k">if</span> <span class="err">\</span><span class="p">(</span><span class="n">Input</span><span class="p">.</span><span class="n">GetKey</span><span class="err">\</span><span class="p">(</span><span class="n">KeyCode</span><span class="p">.</span><span class="n">W</span><span class="p">)</span> <span class="err">\</span><span class="p">||</span> <span class="n">Input</span><span class="p">.</span><span class="n">GetKey</span><span class="err">\</span><span class="p">(</span><span class="n">KeyCode</span><span class="p">.</span><span class="n">A</span><span class="p">)</span><span class="err">\</span><span class="p">||</span> <span class="n">Input</span><span class="p">.</span><span class="n">GetKey</span><span class="err">\</span><span class="p">(</span><span class="n">KeyCode</span><span class="p">.</span><span class="n">S</span><span class="p">)</span><span class="err">\</span><span class="p">||</span> <span class="n">Input</span><span class="p">.</span><span class="n">GetKey</span><span class="err">\</span><span class="p">(</span><span class="n">KeyCode</span><span class="p">.</span><span class="n">D</span><span class="p">))</span> 
                  <span class="p">{</span>
                      <span class="n">turnUI</span><span class="p">.</span><span class="nf">SetActive</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
                      <span class="n">state</span> <span class="p">=</span> <span class="n">CameraState</span><span class="p">.</span><span class="n">Play_Behind</span><span class="p">;</span>
                  <span class="p">}</span>
              <span class="p">}</span>
          <span class="p">}</span>
      <span class="p">}</span></code></pre></figure>

<hr />

<h3 id="3-미션">3. 미션</h3>

<hr />

:ET